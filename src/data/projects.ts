export type ProjectVisibility = "public" | "private";
export type ProjectType = "personal" | "client";

export interface Project {
  title: string;
  description: string;
  highlights?: string[];
  stack: string[];
  githubUrl?: string;
  liveUrl?: string;
  caseStudyUrl?: string;
  imageUrl?: string;
  logoUrl?: string;
  visibility: ProjectVisibility;
  openSource?: boolean;
  license?: string;
  year?: string;
  type: ProjectType;
  clientName?: string;
  clientLogoUrl?: string;
  role?: string;
  status?: "active" | "archived" | "in progress" | "maintenance";
}

export const projects: Project[] = [
  {
    title: "EV Fleet Management Platform Suite",
    description:
      "A comprehensive suite of tools for an EV SaaS provider, including fleet assessment, mobile employee assistant, and infrastructure orchestration. Delivered scalable microservices, real-time integrations, and IoT-ready backend for enterprise clients transitioning to e-mobility.",
    highlights: [
      "Led GCP to Azure migration with zero downtime across 3 major products",
      "Managed Azure Kubernetes Service (AKS) infrastructure for EV charging platform",
      "Architected monorepo solution using Lerna and NX with reusable libraries",
      "Built eConsultant MVP for CO2 emissions and EV transition calculations",
      "Migrated messaging infrastructure from Redis Pub/Sub to RabbitMQ",
      "Deployed monitoring stack with Grafana, Prometheus, and Redash",
    ],
    stack: [
      "NestJS",
      "TypeScript",
      "PostgreSQL",
      "Redis",
      "RabbitMQ",
      "Docker",
      "Kubernetes",
      "Azure",
      "GitLab",
      "Lerna",
      "NX",
      "Grafana",
      "Prometheus",
      "Redash",
      "Helm",
      "Jest",
      "Postman",
    ],
    githubUrl: undefined,
    liveUrl: undefined,
    visibility: "private",
    type: "client",
    openSource: false,
    year: "2021â€“2025",
    role: "Senior Backend Engineer",
    status: "active",
    clientName: "Confidential (EV SaaS Provider)",
  },
  {
    title: "Personal Portfolio Website",
    description:
      "A cyberpunk-inspired personal website and portfolio showcasing my work as a Senior Backend Engineer & Cloud Architect. Built with Next.js 14, TypeScript, and Tailwind CSS, featuring an interactive terminal, real-time GitHub activity tracking, and blog integration.",
    highlights: [
      "Interactive Terminal with command history and real-time execution",
      "Real-time GitHub integration with contribution graph visualization",
      "Medium blog integration with responsive article cards",
      "Cyberpunk-inspired design with modern UI/UX elements",
      "SEO optimized with meta tags and sitemap generation",
      "Fully responsive design with dark mode support",
    ],
    stack: ["Next.js", "TypeScript", "Tailwind CSS", "Framer Motion", "React", "Node.js"],
    githubUrl: "https://github.com/MRdevX/mrashidi.me",
    liveUrl: "https://mrashidi.me",
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "All Rights Reserved",
    year: "2024",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "NestJS Queue Worker PoC",
    description:
      "A proof-of-concept demonstrating a scalable, fault-tolerant task processing system built with NestJS, PostgreSQL, and RabbitMQ. Showcases workflow orchestration, retry mechanisms, and horizontal scaling for distributed task processing.",
    highlights: [
      "Queue Manager for task queuing, assignment, and monitoring",
      "Worker Nodes with fault tolerance and optimized patterns",
      "Workflow Orchestration with complex task dependencies",
      "Horizontal scaling support for multiple worker instances",
      "Retry mechanisms with configurable policies",
      "Health monitoring and comprehensive API documentation",
    ],
    stack: ["NestJS", "TypeScript", "PostgreSQL", "RabbitMQ", "Docker", "Node.js"],
    githubUrl: "https://github.com/MRdevX/nestjs-queue-worker-poc",
    liveUrl: undefined,
    visibility: "public",
    type: "personal",
    openSource: true,
    license: undefined,
    year: "2025",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "Notable Nomads Backend API",
    description:
      "Backend API service for the Notable Nomads platform featuring AI chat integration, email services, blog management, and comprehensive health monitoring. Built with NestJS and PostgreSQL for scalability and reliability.",
    highlights: [
      "AI Chat Service using Gemini Pro for intelligent conversations",
      "Email Service with AWS SES integration",
      "Medium blog post integration and management",
      "Super Admin Management with role-based access control",
      "Comprehensive health monitoring and status endpoints",
      "Docker deployment with automated SSL certificate management",
    ],
    stack: ["NestJS", "TypeScript", "PostgreSQL", "Node.js", "Docker", "AWS", "Swagger"],
    githubUrl: "https://github.com/notablenomads/nn-backend-api",
    liveUrl: "https://notablenomads.com/",
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2025",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "NestJS Drizzle Demo",
    description:
      "A demonstration project showcasing the integration of NestJS with Drizzle ORM for PostgreSQL. Implements a complete book management system with authors, books, and genres, demonstrating modern TypeScript ORM patterns and best practices.",
    highlights: [
      "Complete CRUD operations for authors, books, and genres",
      "Type-safe queries with Drizzle's query builder",
      "Many-to-many relationships and foreign key management",
      "Database migrations with Drizzle",
      "Comprehensive Swagger/OpenAPI documentation",
      "Modular architecture with proper DTOs",
    ],
    stack: ["NestJS", "TypeScript", "PostgreSQL", "Drizzle", "Swagger"],
    githubUrl: "https://github.com/MRdevX/nestjs-drizzle-demo",
    liveUrl: undefined,
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2025",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "Spotify Lyrics Translator",
    description:
      "A desktop application that provides real-time translation of Spotify lyrics while you listen to music. Experience your favorite songs in any language with synchronized translations and seamless integration with Spotify.",
    highlights: [
      "Real-time synchronization with currently playing Spotify tracks",
      "Multi-language translation support",
      "Cross-platform native applications for macOS and Windows",
      "Spotify Premium account integration",
      "Automatic detection and translation of lyrics",
    ],
    stack: ["Python", "Spotify API", "Translation APIs", "PyQt", "macOS", "Windows"],
    githubUrl: "https://github.com/MRdevX/spotify-lyrics-translator",
    liveUrl: undefined,
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2025",
    role: "Fork Maintainer & Contributor",
    status: "active",
  },
  {
    title: "Nestifined MS Framework",
    description:
      "A refined and optimized codebase template for setting up NestJS microservices. Provides a streamlined foundation for beginning fresh microservice initiatives with comprehensive tooling and best practices.",
    highlights: [
      "Complete boilerplate for NestJS microservice development",
      "Docker integration with multi-stage builds",
      "TypeORM integration for database interactions",
      "Redis caching layer and RabbitMQ messaging",
      "Swagger/OpenAPI documentation",
      "Jest testing framework setup",
    ],
    stack: ["NestJS", "TypeScript", "TypeORM", "Redis", "RabbitMQ", "Docker", "Kubernetes", "Swagger"],
    githubUrl: "https://github.com/MRdevX/nestifined-ms-framework",
    liveUrl: undefined,
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2024",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "Nestifined Auth MS",
    description:
      "An Authentication and Authorization microservice built on the Nestifined Framework. Provides AuthN and AuthZ capabilities with JWT tokens, role-based access control, and secure user management for microservice architectures.",
    highlights: [
      "JWT-based authentication with token management",
      "Role-based access control (RBAC) with permissions",
      "User registration and profile management",
      "Password hashing and secure session management",
      "Redis integration for session caching",
      "Comprehensive API documentation",
    ],
    stack: ["NestJS", "TypeScript", "TypeORM", "Redis", "JWT", "Docker", "Kubernetes", "Swagger"],
    githubUrl: "https://github.com/MRdevX/nestifined-auth-ms",
    liveUrl: undefined,
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2024",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "PostgreSQL Backup Restore Kit",
    description:
      "A toolkit containing bash scripts for easy backup and restore of PostgreSQL databases. Automates database management operations with environment-specific configurations for development, staging, and production environments.",
    highlights: [
      "Automated backup process with environment selection",
      "Multi-environment support (DEV, STAG, PROD)",
      "Interactive database selection for targeted operations",
      "Database restoration with backup file validation",
      "Automatic database creation during restore",
      "Date-based backup organization",
    ],
    stack: ["Bash", "PostgreSQL", "Shell Scripting", "Database Management"],
    githubUrl: "https://github.com/MRdevX/pg-backup-restore-kit",
    liveUrl: undefined,
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2024",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "Kubernetes Rollout Automation",
    description:
      "Automate Kubernetes deployment restarts by category and environment, simplifying management across development, staging, and production environments. Ideal for maintaining application reliability and consistency with minimal effort.",
    highlights: [
      "Selective restart by category (Backend, Frontend, Tools) and environment",
      "Interactive selection for categories, environments, and deployments",
      "Customizable deployment lists for different environments",
      "Automated deployment restart tasks",
      "Operational efficiency with reduced manual intervention",
    ],
    stack: ["Kubernetes", "Bash", "Shell Scripting", "DevOps"],
    githubUrl: "https://github.com/MRdevX/k8s-rollout-automation",
    liveUrl: undefined,
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2024",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "NestJS Microservice Kit",
    description:
      "A boilerplate code template for quickly setting up NestJS microservices without dealing with extra configurations. Provides generic CRUD operations, database integration, testing, and production-ready features out of the box.",
    highlights: [
      "Generic CRUD Controller and Service implementations",
      "PostgreSQL integration with TypeORM and migrations",
      "Unit and integration tests with Jest",
      "Automatic Swagger/OpenAPI documentation",
      "Docker and Docker Compose setup",
      "Production-ready configuration management",
    ],
    stack: ["NestJS", "TypeScript", "TypeORM", "PostgreSQL", "Docker", "Jest", "Swagger"],
    githubUrl: "https://github.com/MRdevX/nestjs-microservice-kit",
    liveUrl: undefined,
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2021",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "License Lens",
    description:
      "A tool for scanning and analyzing license information in projects. Automates license scanning across multiple repositories, identifies projects, checks dependency licenses, and generates clear summaries for compliance and transparency.",
    highlights: [
      "Automated license scanning across multiple ecosystems",
      "Multi-format reports (text and JSON)",
      "Commercial use analysis and categorization",
      "Package manager ecosystem support",
      "Configurable exclusions and depth control",
      "Cross-platform support (Deno, Node.js, Bun)",
    ],
    stack: ["TypeScript", "Deno", "Node.js", "CLI", "License Analysis"],
    githubUrl: "https://github.com/MRdevX/license-lens",
    liveUrl: "https://jsr.io/@mrdevx/license-lens",
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2024",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "Rusty Repo Updater",
    description:
      "A lightweight, efficient Rust CLI utility for automatically updating multiple Git repositories in a single directory. Streamlines repository management with automatic discovery and multi-branch support for develop, main, and master branches.",
    highlights: [
      "Automatic discovery of Git repositories",
      "Multi-branch support (develop, main, master)",
      "Lightweight Rust implementation",
      "Comprehensive logging and status reporting",
      "Cross-platform compatibility",
      "Streamlined repository management",
    ],
    stack: ["Rust", "CLI", "Git", "Cargo"],
    githubUrl: "https://github.com/MRdevX/rusty-repo-updater",
    liveUrl: undefined,
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2024",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "Flight Operations Platform",
    description:
      "Complete aviation operations and crew management system built from scratch using Express.js and JavaScript. Served React dashboard and iPadOS application for flight crew operations with real-time weather data integration and offline synchronization capabilities.",
    highlights: [
      "Complete backend architecture for aviation operations",
      "RESTful APIs serving React dashboard and iPadOS app",
      "Real-time weather forecast integration",
      "Weight/balance calculations and crew scheduling",
      "Offline synchronization for flight crews",
      "MongoDB schema optimized for aviation data",
    ],
    stack: ["Express", "JavaScript", "MongoDB", "RESTful APIs", "iPadOS", "React", "Weather APIs"],
    githubUrl: undefined,
    liveUrl: undefined,
    visibility: "private",
    type: "client",
    openSource: false,
    year: "2020-2021",
    role: "Senior Backend Engineer",
    status: "active",
    clientName: "Mehrpardaz Co",
  },
  {
    title: "NomadBoard Chrome Extension",
    description:
      "A Chrome extension to help job seekers track their job applications with Google Sheets integration. Automatically captures job data, tracks application status, and integrates with Google Sheets for easy job search management.",
    highlights: [
      "OAuth integration with Google Cloud Console",
      "Automatic job data capture from posting pages",
      "Application status tracking with custom categories",
      "Google Sheets API integration for data storage",
      "Recent jobs history and management",
      "Secure credential management",
    ],
    stack: ["JavaScript", "TypeScript", "Chrome Extension API", "Google Sheets API", "OAuth", "CSS", "HTML"],
    githubUrl: "https://github.com/notablenomads/nomadboard-extension",
    liveUrl: undefined,
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2025",
    role: "Creator & Maintainer",
    status: "active",
  },
  {
    title: "DataFlow Pipeline PoC",
    description:
      "A proof-of-concept data import pipeline demonstrating modern backend development practices with Hono, Supabase, and Graphile Worker. Features multi-format data ingestion, resumable uploads, background processing, and comprehensive validation for scalable data processing workflows.",
    highlights: [
      "Multi-format data ingestion (JSON, multipart, streaming)",
      "Resumable uploads with TUS protocol",
      "Background job processing with Graphile Worker",
      "Zod schema validation with detailed error reporting",
      "Supabase Storage integration with cleanup",
      "Comprehensive testing infrastructure with Vitest",
    ],
    stack: [
      "Hono",
      "TypeScript",
      "Supabase",
      "PostgreSQL",
      "Graphile Worker",
      "Zod",
      "TUS Protocol",
      "Vitest",
      "Biome",
      "Node.js",
    ],
    githubUrl: "https://github.com/MRdevX/dataflow-pipeline-poc",
    liveUrl: undefined,
    visibility: "public",
    type: "personal",
    openSource: true,
    license: "MIT",
    year: "2025",
    role: "Creator & Maintainer",
    status: "active",
  },
];
